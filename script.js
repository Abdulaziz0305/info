// Условие
// 1 == 1 сравнивает наши значения между двумя операндами (не строгое сравнение)
// 1 === 1 сравнивает наши значения и тип данных между двумя операндами (строгое сравение)

// < - меньше
// > - больше
// >= - больше или равно 
// <= - меньше или равно
// != - не равно (возвращает true если значения не равны)
// && - оператор и (амперсатор)
// || - оператор или



// Цикл
// ++ делает прибавку на 1 Пример: 5++ = 5 + 1
// -- делает минус 1 Пример: 5-- = 5 - 1
// var i = 0;
// console.log(i);
// console.log(++i); // префикс - способ вывода сначало прибавляет а потом выводит значения
// console.log(i++); // постфикс - способ вывода сначало выводит значения а потом прибавляет 


//while
// var i = 0;
// while(i < 10) {
// console.log(i);
// i++
// }
// Цикл будет выполняться до тех пор пока условия не выполнется ( итератор не достигнет 10 )


// Do while - с 1 делает а потом выполняет 

// var i = 0;
//  do {
//  console.log(i);
//  i++
//  }while(i < 10) 

// While и do while - работают одинаково

// do {
// var x = +prompt('введите число');
// }while(isNaN(x) || x != 2){
// console.log(x);
// }

// for(начало,условие,шаг){}
// let b = +prompt('Введите число')
// console.log(b * 3);
// for (let a = 1; a < 3; ){
//     if (!isNaN(a) * 3) {
        
//     }
// }




// let a = +prompt('Введите число');
// console.log(a);
// let b = +prompt('Введите степень');
// console.log((a * b) * (a));
// alert('Ответ = ' + (a * b) * (a))

// let a = +prompt('Введите число');
// let b = +prompt('Введите степень');
// let c = 1;
// for(let d = 0; d < b; d++) {
//  c = c * a
// }
// alert(c);

let date = prompt('Введите свое имя');
let birthday = +prompt('Введите свой год рождения');
let now = +prompt('Введите нынешний год');

function info(birthday,now){
let infa = now - birthday
alert(date + '.' + ' Ваш возраст: ' + infa + '.');
return infa
}
console.log(info(birthday,now));
















// for(let c = 1; c > b;  ){
//     console.log(c);
// }




/* var a = 1;
console.log(a);
var b = 3;
while(a < b){
    console.log(b);
    a * b
} */